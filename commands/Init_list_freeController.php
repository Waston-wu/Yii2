<?php
/**
 * @link http://www.yiiframework.com/
 * @copyright Copyright (c) 2008 Yii Software LLC
 * @license http://www.yiiframework.com/license/
 */

namespace app\commands;

use app\models\YShiyong;
use yii\console\Controller;

/**
 * This command echoes the first argument that you have entered.
 *
 * This command is provided as an example for you to learn how to create console commands.
 *
 * @author Qiang Xue <qiang.xue@gmail.com>
 * @since 2.0
 */
// php yii Init_list_free 1 1000
class Init_list_freeController extends Controller
{
    private $model = null;
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->model = new YShiyong();
    }

    /**
     * This command echoes what you have entered as the message.
     * @param int $page 页码
     * @param int $pageSize 每页数量
     */
    public function actionIndex($page = 1, $pageSize = 10000)
    {
        try{
            $startTime = microtime(true);

            $count = $this->initFreeList($page, $pageSize);

            $endTime = microtime(true);
            $runTime = $startTime - $endTime;
            echo '初始化成功，耗时：' . $runTime  ;
            echo PHP_EOL;
            echo  '总计执行：' . $count;
        }catch (\Exception $e){
            echo '初始化失败' . $e->getMessage();
        }
    }

    /**
     * @param $page
     * @param $pageSize
     * @return int
     * @throws \Exception
     * @author 伍松
     * @date 2018/12/11 13:37
     * 初始化搜索引擎，创建索引，添加文档
     */
    private function initFreeList($page, $pageSize)
    {
        // 创建索引
        $this->model->createIndex();

        $count = $this->initData(0, $page, $pageSize);
        return $count;
    }

    /**
     * @param $count
     * @param $page
     * @param $pageSize
     * @return int
     * @throws \Exception
     * @author 伍松
     * @date 2018/12/11 14:09
     * 添加数据
     */
    private function initData($count, $page, $pageSize)
    {
        while (true){
            $list = $this->model->find()->limit($pageSize)->offset($pageSize * ($page - 1)) ->all();
            $list = \yii\helpers\Json::encode($list);
            if(empty($list)){
                return $count;
            }
            foreach (json_decode($list, true) as $info){
                $this->model->addDocument($info);
                $count ++;
            }
            $page++;
            return $this->initData($count, $page, $pageSize);
        }
    }
}
